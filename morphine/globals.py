import os
import re

__enviroments__ = [
    "Console",
    "Console :: Curses",
    "Console :: Framebuffer",
    "Console :: Newt",
    "Console :: svgalib",
    "Handhelds/PDA's",
    "MacOS X",
    "MacOS X :: Aqua",
    "MacOS X :: Carbon",
    "MacOS X :: Cocoa",
    "No Input/Output (Daemon)",
    "OpenStack",
    "Other Environment",
    "Plugins",
    "Web Buffet",
    "Web Environment",
    "Web Mozilla",
    "Web ToscaWidgets",
    "Win32 (MS Windows)",
    "X11 Applications",
    "X11 Applications :: GTK",
    "X11 Applications :: Gnome",
    "X11 Applications :: KDE",
    "X11 Applications :: Qt",
]
__intended_audience__ = [
    "Customer Service",
    "Developers",
    "Education",
    "End Users/Desktop",
    "Financial and Insurance Industry",
    "Healthcare Industry",
    "Information Technology",
    "Legal Industry",
    "Manufacturing",
    "Science/Research",
    "System Administrators",
    "Telecommunications Industry",
]
__license__ = [
    "CC0 1.0 Universal (CC0 1.0) Public Domain Dedication",
    "CeCILL-B Free Software License Agreement (CECILL-B)",
    "CeCILL-C Free Software License Agreement (CECILL-C)",
    "DFSG approved",
    "Eiffel Forum License (EFL)",
    "Free For Educational Use",
    "Free For Home Use",
    "Free To Use But Restricted",
    "Free for non-commercial use",
    "Freely Distributable",
    "Freeware",
    "Netscape Public License (NPL)",
    "Nokia Open Source License (NOKOS)",
    "OSI Approved",
    "OSI Approved :: Academic Free License (AFL)",
    "OSI Approved :: Apache Software License",
    "OSI Approved :: Apple Public Source License",
    "OSI Approved :: Artistic License",
    "OSI Approved :: Attribution Assurance License",
    "OSI Approved :: BSD License",
    "OSI Approved :: Boost Software License 1.0 (BSL-1.0)",
    "OSI Approved :: CEA CNRS Inria Logiciel Libre License, version 2.1 (CeCILL-2.1)",
    "OSI Approved :: Common Development and Distribution License 1.0 (CDDL-1.0)",
    "OSI Approved :: Common Public License",
    "OSI Approved :: Eclipse Public License 1.0 (EPL-1.0)",
    "OSI Approved :: Eclipse Public License 2.0 (EPL-2.0)",
    "OSI Approved :: Eiffel Forum License",
    "OSI Approved :: European Union Public Licence 1.0 (EUPL 1.0)",
    "OSI Approved :: European Union Public Licence 1.1 (EUPL 1.1)",
    "OSI Approved :: European Union Public Licence 1.2 (EUPL 1.2)",
    "OSI Approved :: GNU Affero General Public License v3",
    "OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)",
    "OSI Approved :: GNU Free Documentation License (FDL)",
    "OSI Approved :: GNU General Public License (GPL)",
    "OSI Approved :: GNU General Public License v2 (GPLv2)",
    "OSI Approved :: GNU General Public License v2 or later (GPLv2+)",
    "OSI Approved :: GNU General Public License v3 (GPLv3)",
    "OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "OSI Approved :: GNU Lesser General Public License v2 (LGPLv2)",
    "OSI Approved :: GNU Lesser General Public License v2 or later (LGPLv2+)",
    "OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)",
    "OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)",
    "OSI Approved :: GNU Library or Lesser General Public License (LGPL)",
    "OSI Approved :: IBM Public License",
    "OSI Approved :: ISC License (ISCL)",
    "OSI Approved :: Intel Open Source License",
    "OSI Approved :: Jabber Open Source License",
    "OSI Approved :: MIT License",
    "OSI Approved :: MITRE Collaborative Virtual Workspace License (CVW)",
    "OSI Approved :: Motosoto License",
    "OSI Approved :: Mozilla Public License 1.0 (MPL)",
    "OSI Approved :: Mozilla Public License 1.1 (MPL 1.1)",
    "OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)",
    "OSI Approved :: Nethack General Public License",
    "OSI Approved :: Nokia Open Source License",
    "OSI Approved :: Open Group Test Suite License",
    "OSI Approved :: PostgreSQL License",
    "OSI Approved :: Python License (CNRI Python License)",
    "OSI Approved :: Python Software Foundation License",
    "OSI Approved :: Qt Public License (QPL)",
    "OSI Approved :: Ricoh Source Code Public License",
    "OSI Approved :: Sleepycat License",
    "OSI Approved :: Sun Industry Standards Source License (SISSL)",
    "OSI Approved :: Sun Public License",
    "OSI Approved :: Universal Permissive License (UPL)",
    "OSI Approved :: University of Illinois/NCSA Open Source License",
    "OSI Approved :: Vovida Software License 1.0",
    "OSI Approved :: W3C License",
    "OSI Approved :: X.Net License",
    "OSI Approved :: Zope Public License",
    "OSI Approved :: zlib/libpng License",
    "Other/Proprietary License",
    "Public Domain",
    "Repoze Public License",
]
__programming_lang__ = [
    "APL",
    "ASP",
    "Ada",
    "Assembly",
    "Awk",
    "Basic",
    "C",
    "C#",
    "C++",
    "Cold Fusion",
    "Cython",
    "Delphi/Kylix",
    "Dylan",
    "Eiffel",
    "Emacs-Lisp",
    "Erlang",
    "Euler",
    "Euphoria",
    "Forth",
    "Fortran",
    "Haskell",
    "Java",
    "JavaScript",
    "Lisp",
    "Logo",
    "ML",
    "Modula",
    "OCaml",
    "Object Pascal",
    "Objective C",
    "Other",
    "Other Scripting Engines",
    "PHP",
    "PL/SQL",
    "PROGRESS",
    "Pascal",
    "Perl",
    "Pike",
    "Pliant",
    "Prolog",
    "Python",
    "Python :: 2",
    "Python :: 2 :: Only",
    "Python :: 2.3",
    "Python :: 2.4",
    "Python :: 2.5",
    "Python :: 2.6",
    "Python :: 2.7",
    "Python :: 3",
    "Python :: 3 :: Only",
    "Python :: 3.0",
    "Python :: 3.1",
    "Python :: 3.2",
    "Python :: 3.3",
    "Python :: 3.4",
    "Python :: 3.5",
    "Python :: 3.6",
    "Python :: 3.7",
    "Python :: Implementation",
    "Python :: Implementation :: CPython",
    "Python :: Implementation :: IronPython",
    "Python :: Implementation :: Jython",
    "Python :: Implementation :: MicroPython",
    "Python :: Implementation :: PyPy",
    "Python :: Implementation :: Stackless",
    "REBOL",
    "Rexx",
    "Ruby",
    "Rust",
    "SQL",
    "Scheme",
    "Simula",
    "Smalltalk",
    "Tcl",
    "Unix Shell",
    "Visual Basic",
    "XBasic",
    "YACC",
    "Zope",
]


class MorphineDict(dict):
    def __getattr__(self, key):
        if key not in self:
            raise AttributeError(key)
        return self[key]

    def __setattr__(self, key, value):
        self[key] = value

    def __delattr__(self, key):
        del self[key]


def find_packages(path="."):
    ret = []
    for root, dirs, files in os.walk(path):
        dirs = dirs
        if "__init__.py" in files:
            if os.name == "nt":
                ret.append(re.sub("^[^A-z0-9_]+", "", root.replace("\\", ".")))
            else:
                ret.append(re.sub("^[^A-z0-9_]+", "", root.replace("/", ".")))
    return ret

